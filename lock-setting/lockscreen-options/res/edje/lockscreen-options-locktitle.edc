 /*
  * Copyright 2012  Samsung Electronics Co., Ltd
  *
  * Licensed under the Flora License, Version 1.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.tizenopensource.org/license
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */



#define WIDTH 720
#define HEIGHT 1280
#define TOOLBAR_WIDTH 720
#define TOOLBAR_HEIGHT 84

#define BUTTON_BG_NORMAL_OR_PRESS(part_name, rel1_x, rel1_y, rel2_x, rel2_y, normal_icon_name, press_icon_name)\
		part{\
			name: part_name;\
			type: IMAGE;\
			mouse_events: 1;\
			scale: 1;\
			description{\
				state: "default" 0.0;\
				visible: 1;\
				rel1 {relative: rel1_x rel1_y; to: "bg";}\
				rel2 {relative: rel2_x rel2_y; to: "bg";}\
				image.normal: normal_icon_name;\
				image.border: 8 8 0 0;\
			}\
			description{\
				state: "press" 0.0;\
				inherit: "default" 0.0;\
				image.normal: press_icon_name;\
				image.border: 8 8 0 0;\
			}\
		}

#define BUTTON_NORMAL_OR_PRESS(part_name, normal_icon_name, press_icon_name, part_bg_name)\
		part{\
			name: part_name;\
			type: IMAGE;\
			scale: 1;\
			mouse_events: 1;\
			repeat_events: 1;\
			description{\
				state: "default" 0.0;\
				visible: 1;\
				rel1 {relative: 0.0 0.0; to: part_bg_name;}\
				rel2 {relative: 1.0 1.0; to: part_bg_name;}\
				image.normal: normal_icon_name;\
			}\
			description{\
					state: "press" 0.0;\
					inherit: "default" 0.0;\
					image.normal: press_icon_name;\
				}\
			}
#define TOOLBAR_BUTTON_PROGRAM_SIGNAL_EMIT_1(part_name, singal_name)\
		 program{\
			 name: "mouse_down_"part_name;\
			 signal: "mouse,down,1";\
			 source: part_name;\
			 action: STATE_SET "press" 0.0;\
			 target: part_name;\
		 }\
		 program{\
			 name: "send_event_"part_name;\
			 signal: "mouse,clicked,1";\
			 source: part_name;\
			 action: SIGNAL_EMIT singal_name "";\
		 }\
		 program{\
			 name: "mouse_up_"part_name;\
			 signal: "mouse,up,1";\
			 source: part_name;\
			 action: STATE_SET "default" 0.0;\
			 target: part_name;\
		 }
#define TOOLBAR_BUTTON_PROGRAM_SIGNAL_EMIT_2(part_name, singal_name)\
		 program{\
			 name: "send_event_"part_name;\
			 signal: "mouse,clicked,1";\
			 source: part_name;\
			 action: SIGNAL_EMIT singal_name "";\
		 }
#define COLOR_RECT(part_name, relative_part_name, color_class_name)\
	part{\
		name: part_name;\
		type: RECT;\
		scale: 1;\
		description{\
			state: "default" 0.0;\
			rel1 { relative: 9/56 40/60; to: relative_part_name;}\
			rel2 { relative: 49/56 50/60; to: relative_part_name;}\
			color_class: color_class_name;\
		}\
	}

group{
	images{
		image: "B09_Add Text_sip_option_bg.png" COMP;
	}
	name: "lockscreen.options.locktitle.main";
	parts{
		part{
			name: "background";
			type: RECT;
			scale: 1;
			description{
				state: "default" 0.0;
				visible: 0;
				rel1 { relative: 0.0 0.0; }
				rel2 { relative: 1.0 1.0; }
			}
		}
		part{
			name: "elm.swallow.content"; /* editfield */
			type: SWALLOW;
			scale: 1;
			description{
				state: "default" 0.0;
				min: 0 108;
				align: 0.0 0.0;
				rel1 { relative: 0.0 0.15; to: "background";}
				rel2 { relative: 1.0 0.15; to: "background";}
			}
		}
		part{
			name: "toolbar.bg";
			type: IMAGE;
			scale: 1;
			description{
				state: "default" 0.0;
				min: 0 100;
				align: 0.0 1.0;
				visible: 0;
				rel1 { relative: 0.0 1.0; to: "background";}
				rel2 { relative: 1.0 1.0; to: "background";}
				image.normal: "B09_Add Text_sip_option_bg.png";
				image.border: 8 8 8 8;
			}
		}
		part{
			name: "elm.swallow.toolbar";/* toolbar layout */
			type: SWALLOW;
			scale: 1;
			description{
				state: "default" 0.0;
				visible: 0;
				rel1 { relative: 0.0 0.0; to: "toolbar.bg";}
				rel2 { relative: 1.0 1.0; to: "toolbar.bg";}
			}
		}
		part{
			name: "elm.swallow.selector";/* font and color selector layout */
			type: SWALLOW;
			scale: 1;
			description{
				state: "default" 0.0;
				visible: 1;
				rel1 { relative: 0.0 1.0; to: "toolbar.bg";}
				rel2 { relative: 1.0 1.0; to: "background";}
			}
		}
	}
	script {
		public message(Msg_Type:type, id, ...) {
			custom_state(PART:"toolbar.bg", "default", 0.0);
			custom_state(PART:"elm.swallow.toolbar", "default", 0.0);
			if ((type == MSG_FLOAT) && (id == 1)) {
				new Float:rel2_y = Float:getarg(2);
				set_state_val(PART:"toolbar.bg", STATE_REL1, 0.0, rel2_y);
				set_state_val(PART:"toolbar.bg", STATE_REL2, 1.0, rel2_y);
			}
			if ((type == MSG_FLOAT) && (id == 2)) {
				set_state_val(PART:"toolbar.bg", STATE_VISIBLE, 1);
				set_state_val(PART:"elm.swallow.toolbar", STATE_VISIBLE, 1);
			}
			if ((type == MSG_FLOAT) && (id == 3)) {
				set_state_val(PART:"toolbar.bg", STATE_VISIBLE, 0);
				set_state_val(PART:"elm.swallow.toolbar", STATE_VISIBLE, 0);
			}
			set_state(PART:"toolbar.bg", "custom", 0.0);
			set_state(PART:"elm.swallow.toolbar", "custom", 0.0);
		}
	}
}

group{
	images{
		image: "B09_key_btn_01.png" COMP;
		image: "B09_key_btn_press.png" COMP;
		image: "B09_Add Text_sip_option_bold.png" COMP;
		image: "B09_Add Text_sip_option_Italic.png" COMP;
		image: "B09_Add Text_sip_option_underline.png" COMP;
		image: "B09_Add Text_sip_option_color.png" COMP;
		image: "B09_Add Text_sip_option_style.png" COMP;
		image: "B09_Add Text_sip_option_size.png" COMP;
	}
	name: "lockscreen.options.locktitle.toolbar";
	parts{
		part{
			name: "bg";
			type: RECT;
			scale: 1;
			description{
				state: "default" 0.0;
				visible: 0;
				rel1 { relative: 0.0 0.0; }
				rel2 { relative: 1.0 1.0; }
			}
		}
		part{
			name: "font.bg";
			type: IMAGE;
			mouse_events: 1;
			scale: 1;
			description{
				state: "default" 0.0;
				visible: 1;
				rel1 {relative: 8/TOOLBAR_WIDTH 12/TOOLBAR_HEIGHT; to: "bg";}
				rel2 {relative: 144/TOOLBAR_WIDTH 76/TOOLBAR_HEIGHT; to: "bg";}
				image.normal: "B09_key_btn_01.png";
				image.border: 5 5 0 0;
			}
			description{
				state: "press" 0.0;
				inherit: "default" 0.0;
				image.normal: "B09_key_btn_press.png";
				image.border: 5 5 0 0;
			}
		}
		part{
			name: "font";
			type: IMAGE;
			scale: 1;
			mouse_events: 1;
			repeat_events: 1;
			description{
				state: "default" 0.0;
				visible: 1;
				rel1 {relative: 0.0 0.0; to: font.bg;}
				rel2 {relative: 1.0 1.0; to: font.bg;}
				image.normal: "B09_Add Text_sip_option_style.png";
			}
			description{
				state: "press" 0.0;
				inherit: "default" 0.0;
				image.normal: "B09_Add Text_sip_option_style.png";
			}
		}
		part{
			name: "size.bg";
			type: IMAGE;
			mouse_events: 1;
			scale: 1;
			description{
				state: "default" 0.0;
				visible: 1;
				rel1 {relative: 160/TOOLBAR_WIDTH 12/TOOLBAR_HEIGHT; to: "bg";}
				rel2 {relative: 240/TOOLBAR_WIDTH 76/TOOLBAR_HEIGHT; to: "bg";}
				image.normal: B09_key_btn_01.png;
				image.border: 5 5 0 0;
			}
			description{
				state: "press" 0.0;
				inherit: "default" 0.0;
				image.normal: "B09_key_btn_press.png";
				image.border: 5 5 0 0;
			}
		}
		part{
			name: "size";
			type: IMAGE;
			scale: 1;
			mouse_events: 1;
			repeat_events: 1;
			description{
				state: "default" 0.0;
				visible: 1;
				rel1 {relative: 0.0 0.0; to: size.bg;}
				rel2 {relative: 1.0 1.0; to: size.bg;}
				image.normal: "B09_Add Text_sip_option_size.png";
			}
			description{
				state: "press" 0.0;
				inherit: "default" 0.0;
				image.normal: "B09_Add Text_sip_option_size.png";
			}
		}
		part{
			name: "draw.bg";
			type: IMAGE;
			mouse_events: 1;
			scale: 1;
			description{
				state: "default" 0.0;
				visible: 1;
				rel1 {relative: 256/TOOLBAR_WIDTH 12/TOOLBAR_HEIGHT; to: "bg";}
				rel2 {relative: 336/TOOLBAR_WIDTH 76/TOOLBAR_HEIGHT; to: "bg";}
				image.normal: B09_key_btn_01.png;
				image.border: 5 5 0 0;
			}
			description{
				state: "press" 0.0;
				inherit: "default" 0.0;
				image.normal: "B09_key_btn_press.png";
				image.border: 5 5 0 0;
			}
		}
		part{
			name: "draw";
			type: IMAGE;
			scale: 1;
			mouse_events: 1;
			repeat_events: 1;
			description{
				state: "default" 0.0;
				visible: 1;
				rel1 {relative: 0.0 0.0; to: draw.bg;}
				rel2 {relative: 1.0 1.0; to: draw.bg;}
				image.normal: "B09_Add Text_sip_option_color.png";
			}
			description{
				state: "press" 0.0;
				inherit: "default" 0.0;
				image.normal: "B09_Add Text_sip_option_color.png";
			}
		}
		COLOR_RECT("draw_indictor", "draw", "draw_indictor");

		BUTTON_BG_NORMAL_OR_PRESS("text.bold.bg", 440/TOOLBAR_WIDTH, 12/TOOLBAR_HEIGHT,
			                     520/TOOLBAR_WIDTH, 76/TOOLBAR_HEIGHT, "B09_key_btn_01.png",
			                     "B09_key_btn_press.png");
		BUTTON_NORMAL_OR_PRESS("text.bold","B09_Add Text_sip_option_bold.png", "B09_Add Text_sip_option_bold.png", "text.bold.bg");
		BUTTON_BG_NORMAL_OR_PRESS("text.italic.bg", 536/TOOLBAR_WIDTH, 12/TOOLBAR_HEIGHT,
			                     616/TOOLBAR_WIDTH, 76/TOOLBAR_HEIGHT, "B09_key_btn_01.png",
			                     "B09_key_btn_press.png");
		BUTTON_NORMAL_OR_PRESS("text.italic","B09_Add Text_sip_option_Italic.png", "B09_Add Text_sip_option_Italic.png", "text.italic.bg");
		BUTTON_BG_NORMAL_OR_PRESS("text.underline.bg", 632/TOOLBAR_WIDTH, 12/TOOLBAR_HEIGHT,
			                     712/TOOLBAR_WIDTH, 76/TOOLBAR_HEIGHT, "B09_key_btn_01.png",
			                     "B09_key_btn_press.png");
		BUTTON_NORMAL_OR_PRESS("text.underline","B09_Add Text_sip_option_underline.png", "B09_Add Text_sip_option_underline.png", "text.underline.bg");
	}
	script {
        public message(Msg_Type:type, id, ...) {
			if ((type == MSG_INT) && (id == 1)) {
				new text_mode = getarg(2);
				new btnState[128];
				new Float:x;

				if (text_mode == 1) {
					//Bold
					get_state(PART:"text.bold.bg", btnState, 128, x);
					if (strcmp(btnState, "press") == 0) {
						set_state(PART:"text.bold.bg", "default", 0.0);
					} else {
						set_state(PART:"text.bold.bg", "press", 0.0);
					}
				} else if (text_mode == 2) {
					//italic
					get_state(PART:"text.italic.bg", btnState, 128, x);
					if (strcmp(btnState, "press") == 0) {
						set_state(PART:"text.italic.bg", "default", 0.0);
					} else {
						set_state(PART:"text.italic.bg", "press", 0.0);
					}
				} else if (text_mode == 3) {
					//font_underline
					get_state(PART:"text.underline.bg", btnState, 128, x);
					if (strcmp(btnState, "press") == 0) {
						set_state(PART:"text.underline.bg", "default", 0.0);
					} else {
						set_state(PART:"text.underline.bg", "press", 0.0);
					}
				}
			}
		}
	}
	programs{
		TOOLBAR_BUTTON_PROGRAM_SIGNAL_EMIT_1("font.bg", "dropdown.fonttype.clicked");
		TOOLBAR_BUTTON_PROGRAM_SIGNAL_EMIT_1("size.bg", "size.button.clicked");
		TOOLBAR_BUTTON_PROGRAM_SIGNAL_EMIT_1("draw.bg", "draw.button.clicked");
		TOOLBAR_BUTTON_PROGRAM_SIGNAL_EMIT_2("text.bold.bg", "text.bold.clicked");
		TOOLBAR_BUTTON_PROGRAM_SIGNAL_EMIT_2("text.italic.bg", "text.italic.clicked");
		TOOLBAR_BUTTON_PROGRAM_SIGNAL_EMIT_2("text.underline.bg", "text.underline.clicked");
	}
}

group {
	name: "lockscreen.options.locktitle.colorselector";
	parts{
		part {
			name: "bg";
			type: RECT;
			scale: 1;
			description {
				state: "default" 0.0;
				visible: 0;
			}
		}
		part {
			name: "rect";
			type: SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 109;
				rel1 { relative: 0.0 0.0; to: "bg"; offset: 83 83;}
				rel2 { relative: 1.0 0.0; to: "bg"; offset: -83 83;}
			}
		}
		part {
			name: "color";
			type: SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
				rel1 { relative: 0.0 1.0; to_x: "bg"; to_y:"rect"; offset: 0 20;}
				rel2 { relative: 1.0 1.0; to: "bg"; offset: 0 -20;}
			}
		}
	}
}
