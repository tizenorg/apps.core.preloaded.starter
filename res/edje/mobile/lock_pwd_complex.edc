/*
 * Copyright (c) 2009-2014 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

styles {
	style {
		name: "style_complex_title";
		base: "font=Tizen:style=Regular color=#ffffffff color_class=ATO033 font_size=30 wrap=mixed align=center style=shadow shadow_color=#000000bf text_class=ATO033";
		tag: "br" "\n";
		tag: "hilight" "+ color=#ffff";
		tag: "b" "+ color=#ffff";
		tag: "tab" "\t";
	}
}

	group {
		name: "lock-complex-password";
		parts {
			part {
				name: "bg";
				type: SPACER;
				description {
					state: "default" 0.0;
				}
			}
			part {
				name: "title";
				type: TEXTBLOCK;
				effect: "SHADOW";
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 { relative : NUMBER_KEYPAD_REL_W(14) NUMBER_KEYPAD_REL_H(INDICATOR_SIZE+49); to : "bg"; }
					rel2 { relative : NUMBER_KEYPAD_REL_W(526) NUMBER_KEYPAD_REL_H(INDICATOR_SIZE+49+42); to : "bg"; }
					color_class: "ATO033";
					fixed: 1 1;
					text {
						min: 0 1;
						align: 0.5 0.5;
						style: "style_complex_title";
						text : "Enter PIN";
					}
				}
				description {
					state: "show_title" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description {
					state: "hide_title" 0.0;
					inherit: "default" 0.0;
					visible: 0;
				}
			}
			part {
				name: "entry";
				type: SWALLOW;
				description {
					state: "default" 0.0;
					rel1 { relative : NUMBER_KEYPAD_REL_W(34) NUMBER_KEYPAD_REL_H(INDICATOR_SIZE+49+42+42+18); to : "bg"; }
					rel2 { relative : NUMBER_KEYPAD_REL_W(506) NUMBER_KEYPAD_REL_H(INDICATOR_SIZE+49+42+42+18+65); to : "bg"; }
				}
			}
			part {
				name: "underline";
				type: RECT;
				description {
					state: "default" 0.0;
					color_class: LINE_COLOR;
					fixed: 1 1;
					rel1 { relative: 0.0 1.0; to: "entry"; offset : 0 11; }
					rel2 { relative: 1.0 1.0; to: "entry"; offset : 0 11; }
					min: 0 3;
					max: -1 3;
				}
			}
			part {
				name: "underline_shadow";
				type: RECT;
				description {
					state: "default" 0.0;
					color_class: LINE_SHADOW_COLOR;
					fixed: 1 1;
					rel1 { relative: 0.0 0.0; to: "underline"; }
					rel2 { relative: 1.0 1.0; to: "underline"; }
					min: 0 1;
					max: -1 1;
				}
			}
			/* Bottom : changed by IME height */
			part {
				name: "control_panel";
				type: SWALLOW;
				scale: 1;
				description {
					state: "default" 0.0;
					rel1 {
						relative: 0.0 (INDICATOR_SIZE+312+478)/NUMBER_KEYPAD_PANEL_HEIGHT; to: "bg";
					}
					rel2 {
						relative: 1.0 1.0; to: "bg";
					}
				}
			}
		}
		program {
			name: "show.title";
			signal: "show_title";
			action: STATE_SET "show_title" 0.0;
			source: "title";
			target: "title";
		}
		program {
			name: "hide.title";
			signal: "hide_title";
			action: STATE_SET "hide_title" 0.0;
			source: "title";
			target: "title";
		}
		script {
			public message(Msg_Type:type, id, ...) {
				if((type == MSG_INT_SET) && (id == IME_RESIZED)) {
					new h;
					h = getarg(2);

					custom_state(PART:"control_panel", "default", 0.0);
					set_state_val(PART:"control_panel", STATE_REL1_OFFSET, 0, -1*h);
					set_state_val(PART:"control_panel", STATE_REL2_OFFSET, 0, -1*h);
					set_state(PART:"control_panel", "custom", 0.0);
				}
				if((type == MSG_INT_SET) && (id == IME_DOWN)) {
					set_state(PART:"control_panel", "default", 0.0);
				}
			}
		}
	}
